"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) #normal path when using setting.py
BASE_DIR = os.path.dirname(os.path.dirname( os.path.dirname(os.path.abspath(__file__)))) # used in production when setting.py changed to base.py 

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'a**xcu4w96h!n-c#4ii4q&-s8mg15s@na93tp!qx@_$^q(mo-5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Email set-up
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'dnyandiri@gmail.com'
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD','yourPassword')
EMAIL_PORT = 587
EMAIL_USE_TLS =True
DEFAULT_FROM_EMAIL = 'Nunua ecommerce <dnyandiri@gmail.com>'

BASE_URL = "https://yourhostdomainurl"

# # 
# MANAGERS = (
#     ('justin Mitchel', "hungrypy@gmail.com"),
# )

# ADMINS = MANAGERS


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # our apps
    'accounts',
    'addresses',
    'analytics',
    'billing',
    'products',
    'search',
    'tags', 
    'carts',
    'orders',
    'marketing'
]

# change the built-in user model with our custom user model
AUTH_USER_MODEL = 'accounts.User'
# 
LOGIN_URL = '/login/'
LOGIN_URL_REDIRECT = '/'
LOGOUT_URL = '/logout/'

# to handle session (customized)
FORCE_SESSION_TO_ONE = False
FORCE_INACTIVE_USER_ENDSESSION =  False

# stripe api key and pub key
STRIPE_SECRET_KEY= "sk_test_YMymW06J3y9yBajUY9yqroCK00mKPeul2m"
STRIPE_PUB_KEY = 'pk_test_R10p8kBG14RwzgwIuwxXCeoS001sfzCpYq'


# integrate custome mailchimp for marketing emails
MAILCHIMP_API_KEY = "bb7fbdc1001de9739a78531e4b06724f-us20"
MAILCHIMP_DATA_CENTER = "us20"
MAILCHIMP_EMAIL_LIST_ID = "4ef632e986"



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# redirect to products page when the user logs out
LOGOUT_REDIRECT_URL = '/products/'

ROOT_URLCONF = 'ecommerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'ecommerce',
            'HOST': 'localhost',            
            'USER': 'root',
            'PASSWORD': 'arsenal2016',
            'PORT': '3306',
        }

}
# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    }, 
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Custome Static files (CSS, JavaScript, Images) are directly added here by developer,
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static_my_proj"),
]

# The static_cdn folder behaves like the 'server' of the project where static files are held: no direct coding is allowed to be entered
# This static_cdn folder will be outside the core project folder where the env and requirement files are
# its contains the Static_root folder and media_root folder
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_cdn","static_root")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_cdn","media_root")

# https://kirr.co/vklau5
# Let's Encrypt ssl/tls https
CORS_REPLACE_HTTPS_REFERER      = True
HOST_SCHEME                     = "https://"
SECURE_PROXY_SSL_HEADER         = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT             = True
SESSION_COOKIE_SECURE           = True
CSRF_COOKIE_SECURE              = True
SECURE_HSTS_INCLUDE_SUBDOMAINS  = True
SECURE_HSTS_SECONDS             = 1000000
SECURE_FRAME_DENY               = True